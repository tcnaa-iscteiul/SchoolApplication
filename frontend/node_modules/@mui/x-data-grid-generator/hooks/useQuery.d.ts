import { GridRowModel, GridFilterModel, GridSortModel, GridRowId } from '@mui/x-data-grid-pro';
import { UseDemoDataOptions } from './useDemoData';
interface PageInfo {
    totalRowCount?: number;
    nextCursor?: string;
    pageSize?: number;
}
export interface ServerOptions {
    minDelay: number;
    maxDelay: number;
    useCursorPagination?: boolean;
}
export interface QueryOptions {
    cursor?: GridRowId;
    page?: number;
    pageSize?: number;
    filterModel?: GridFilterModel;
    sortModel?: GridSortModel;
}
export declare const createFakeServer: (dataSetOptions?: Partial<UseDemoDataOptions>, serverOptions?: Partial<ServerOptions>) => {
    columns: import("..").GridColDefGenerator[];
    initialState: {
        columns: {
            columnVisibilityModel: import("@mui/x-data-grid-pro").GridColumnVisibilityModel;
        };
    };
    useQuery: (queryOptions: QueryOptions) => {
        pageInfo: PageInfo;
        data: GridRowModel[];
        isLoading: boolean;
    };
};
export {};
