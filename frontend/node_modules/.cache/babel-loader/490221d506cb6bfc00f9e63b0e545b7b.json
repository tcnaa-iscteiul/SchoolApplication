{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  students: []\n};\nconst StudentsSlice = createSlice({\n  name: 'students',\n  initialState,\n  reducers: {\n    replaceStudents(state, action) {\n      state.students = action.payload;\n    },\n\n    addStudent(state, action) {\n      if (!state.students.find(student => student.email === action.payload.email)) {\n        const newStudent = {\n          firstName: action.payload.firstName,\n          lastName: action.payload.lastName,\n          email: action.payload.email,\n          status: action.payload.status,\n          role: action.payload.role,\n          phone: action.payload.phone\n        };\n        state.students.push(newStudent);\n        state.students = state.students.sort();\n      }\n    },\n\n    removeUser(state, action) {\n      state.students = state.students.filter(student => student.email !== action.payload);\n    },\n\n    updateUser(state, action) {\n      const found = state.students.filter(student => student.email === action.payload.email);\n\n      if (found[0]) {\n        const updatedUser = {\n          id: found[0].id,\n          firstName: action.payload.firstName || found[0].firstName,\n          lastName: action.payload.lastName || found[0].lastName,\n          email: action.payload.email || found[0].email,\n          phone: action.payload.phone || found[0].phone\n        };\n        const index = state.students.findIndex(student => student.email === action.payload.email);\n        state.students[index] = { ...updatedUser\n        };\n      }\n    },\n\n    getAllUsers: (state, action) => {\n      state.students = action.payload;\n    }\n  }\n});\nexport const studentsActions = StudentsSlice.actions;\nexport const {\n  replaceStudents,\n  addStudent,\n  removeUser,\n  updateUser,\n  getAllUsers\n} = StudentsSlice.actions;\nexport default StudentsSlice;","map":{"version":3,"names":["createSlice","initialState","students","StudentsSlice","name","reducers","replaceStudents","state","action","payload","addStudent","find","student","email","newStudent","firstName","lastName","status","role","phone","push","sort","removeUser","filter","updateUser","found","updatedUser","id","index","findIndex","getAllUsers","studentsActions","actions"],"sources":["C:/Users/Utilizador/OneDrive/Ambiente de Trabalho/SchoolApplication/frontend/src/store/redux-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IUser } from '../interfaces';\n\ninterface CounterState {\n  students: IUser[];\n}\n\nconst initialState: CounterState = {\n  students: [],\n};\n\nconst StudentsSlice = createSlice({\n  name: 'students',\n  initialState,\n  reducers: {\n    replaceStudents(state, action: PayloadAction<IUser[]>) {\n      state.students = action.payload;\n    },\n    addStudent(state, action: PayloadAction<IUser>) {\n      if (\n        !state.students.find(\n          (student: IUser) => student.email === action.payload.email,\n        )\n      ) {\n        const newStudent = {\n          firstName: action.payload.firstName,\n          lastName: action.payload.lastName,\n          email: action.payload.email,\n          status: action.payload.status,\n          role: action.payload.role,\n          phone: action.payload.phone,\n        };\n        state.students.push(newStudent);\n        state.students = state.students.sort();\n      }\n    },\n    removeUser(state, action: PayloadAction<string>) {\n      state.students = state.students.filter(\n        (student: IUser) => student.email !== action.payload,\n      );\n    },\n    updateUser(state, action: PayloadAction<IUser>) {\n      const found = state.students.filter(\n        (student: IUser) => student.email === action.payload.email,\n      );\n      if (found[0]) {\n        const updatedUser: IUser = {\n          id: found[0].id,\n          firstName: action.payload.firstName || found[0].firstName,\n          lastName: action.payload.lastName || found[0].lastName,\n          email: action.payload.email || found[0].email,\n          phone: action.payload.phone || found[0].phone,\n        };\n        const index = state.students.findIndex(\n          (student: IUser) => student.email === action.payload.email,\n        );\n        state.students[index] = { ...updatedUser };\n      }\n    },\n    getAllUsers: (state, action: PayloadAction<IUser[]>) => {\n      state.students = action.payload;\n    },\n  },\n});\n\nexport const studentsActions = StudentsSlice.actions;\nexport const {\n  replaceStudents,\n  addStudent,\n  removeUser,\n  updateUser,\n  getAllUsers,\n} = StudentsSlice.actions;\nexport default StudentsSlice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}