{"ast":null,"code":"import * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiOptionHandler, gridVisibleColumnDefinitionsSelector, gridRowsMetaSelector } from '@mui/x-data-grid';\nimport { useGridVisibleRows } from '@mui/x-data-grid/internals';\n/**\n * @requires useGridColumns (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\n\nexport const useGridInfiniteLoader = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const contentHeight = Math.max(rowsMeta.currentPageTotalHeight, 1);\n  const isInScrollBottomArea = React.useRef(false);\n  const handleRowsScrollEnd = React.useCallback(scrollPosition => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const scrollPositionBottom = scrollPosition.top + dimensions.viewportOuterSize.height;\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n\n    if (scrollPositionBottom < contentHeight - props.scrollEndThreshold) {\n      isInScrollBottomArea.current = false;\n    }\n\n    if (scrollPositionBottom >= contentHeight - props.scrollEndThreshold && !isInScrollBottomArea.current) {\n      const rowScrollEndParam = {\n        visibleColumns,\n        viewportPageSize,\n        virtualRowsCount: currentPage.rows.length\n      };\n      apiRef.current.publishEvent('rowsScrollEnd', rowScrollEndParam);\n      isInScrollBottomArea.current = true;\n    }\n  }, [contentHeight, props.scrollEndThreshold, visibleColumns, apiRef, currentPage.rows.length]);\n  const handleGridScroll = React.useCallback(_ref => {\n    let {\n      left,\n      top\n    } = _ref;\n    handleRowsScrollEnd({\n      left,\n      top\n    });\n  }, [handleRowsScrollEnd]);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleGridScroll);\n  useGridApiOptionHandler(apiRef, 'rowsScrollEnd', props.onRowsScrollEnd);\n};","map":{"version":3,"names":["React","useGridSelector","useGridApiEventHandler","useGridApiOptionHandler","gridVisibleColumnDefinitionsSelector","gridRowsMetaSelector","useGridVisibleRows","useGridInfiniteLoader","apiRef","props","visibleColumns","currentPage","rowsMeta","contentHeight","Math","max","currentPageTotalHeight","isInScrollBottomArea","useRef","handleRowsScrollEnd","useCallback","scrollPosition","dimensions","current","getRootDimensions","scrollPositionBottom","top","viewportOuterSize","height","viewportPageSize","unstable_getViewportPageSize","scrollEndThreshold","rowScrollEndParam","virtualRowsCount","rows","length","publishEvent","handleGridScroll","left","onRowsScrollEnd"],"sources":["C:/Users/Utilizador/OneDrive/Ambiente de Trabalho/SchoolApplication/frontend/node_modules/@mui/x-data-grid-pro/hooks/features/infiniteLoader/useGridInfiniteLoader.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiOptionHandler, gridVisibleColumnDefinitionsSelector, gridRowsMetaSelector } from '@mui/x-data-grid';\nimport { useGridVisibleRows } from '@mui/x-data-grid/internals';\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\nexport const useGridInfiniteLoader = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const contentHeight = Math.max(rowsMeta.currentPageTotalHeight, 1);\n  const isInScrollBottomArea = React.useRef(false);\n  const handleRowsScrollEnd = React.useCallback(scrollPosition => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const scrollPositionBottom = scrollPosition.top + dimensions.viewportOuterSize.height;\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n\n    if (scrollPositionBottom < contentHeight - props.scrollEndThreshold) {\n      isInScrollBottomArea.current = false;\n    }\n\n    if (scrollPositionBottom >= contentHeight - props.scrollEndThreshold && !isInScrollBottomArea.current) {\n      const rowScrollEndParam = {\n        visibleColumns,\n        viewportPageSize,\n        virtualRowsCount: currentPage.rows.length\n      };\n      apiRef.current.publishEvent('rowsScrollEnd', rowScrollEndParam);\n      isInScrollBottomArea.current = true;\n    }\n  }, [contentHeight, props.scrollEndThreshold, visibleColumns, apiRef, currentPage.rows.length]);\n  const handleGridScroll = React.useCallback(({\n    left,\n    top\n  }) => {\n    handleRowsScrollEnd({\n      left,\n      top\n    });\n  }, [handleRowsScrollEnd]);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleGridScroll);\n  useGridApiOptionHandler(apiRef, 'rowsScrollEnd', props.onRowsScrollEnd);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EAAkDC,uBAAlD,EAA2EC,oCAA3E,EAAiHC,oBAAjH,QAA6I,kBAA7I;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;EACtD,MAAMC,cAAc,GAAGT,eAAe,CAACO,MAAD,EAASJ,oCAAT,CAAtC;EACA,MAAMO,WAAW,GAAGL,kBAAkB,CAACE,MAAD,EAASC,KAAT,CAAtC;EACA,MAAMG,QAAQ,GAAGX,eAAe,CAACO,MAAD,EAASH,oBAAT,CAAhC;EACA,MAAMQ,aAAa,GAAGC,IAAI,CAACC,GAAL,CAASH,QAAQ,CAACI,sBAAlB,EAA0C,CAA1C,CAAtB;EACA,MAAMC,oBAAoB,GAAGjB,KAAK,CAACkB,MAAN,CAAa,KAAb,CAA7B;EACA,MAAMC,mBAAmB,GAAGnB,KAAK,CAACoB,WAAN,CAAkBC,cAAc,IAAI;IAC9D,MAAMC,UAAU,GAAGd,MAAM,CAACe,OAAP,CAAeC,iBAAf,EAAnB;;IAEA,IAAI,CAACF,UAAL,EAAiB;MACf;IACD;;IAED,MAAMG,oBAAoB,GAAGJ,cAAc,CAACK,GAAf,GAAqBJ,UAAU,CAACK,iBAAX,CAA6BC,MAA/E;IACA,MAAMC,gBAAgB,GAAGrB,MAAM,CAACe,OAAP,CAAeO,4BAAf,EAAzB;;IAEA,IAAIL,oBAAoB,GAAGZ,aAAa,GAAGJ,KAAK,CAACsB,kBAAjD,EAAqE;MACnEd,oBAAoB,CAACM,OAArB,GAA+B,KAA/B;IACD;;IAED,IAAIE,oBAAoB,IAAIZ,aAAa,GAAGJ,KAAK,CAACsB,kBAA9C,IAAoE,CAACd,oBAAoB,CAACM,OAA9F,EAAuG;MACrG,MAAMS,iBAAiB,GAAG;QACxBtB,cADwB;QAExBmB,gBAFwB;QAGxBI,gBAAgB,EAAEtB,WAAW,CAACuB,IAAZ,CAAiBC;MAHX,CAA1B;MAKA3B,MAAM,CAACe,OAAP,CAAea,YAAf,CAA4B,eAA5B,EAA6CJ,iBAA7C;MACAf,oBAAoB,CAACM,OAArB,GAA+B,IAA/B;IACD;EACF,CAvB2B,EAuBzB,CAACV,aAAD,EAAgBJ,KAAK,CAACsB,kBAAtB,EAA0CrB,cAA1C,EAA0DF,MAA1D,EAAkEG,WAAW,CAACuB,IAAZ,CAAiBC,MAAnF,CAvByB,CAA5B;EAwBA,MAAME,gBAAgB,GAAGrC,KAAK,CAACoB,WAAN,CAAkB,QAGrC;IAAA,IAHsC;MAC1CkB,IAD0C;MAE1CZ;IAF0C,CAGtC;IACJP,mBAAmB,CAAC;MAClBmB,IADkB;MAElBZ;IAFkB,CAAD,CAAnB;EAID,CARwB,EAQtB,CAACP,mBAAD,CARsB,CAAzB;EASAjB,sBAAsB,CAACM,MAAD,EAAS,YAAT,EAAuB6B,gBAAvB,CAAtB;EACAlC,uBAAuB,CAACK,MAAD,EAAS,eAAT,EAA0BC,KAAK,CAAC8B,eAAhC,CAAvB;AACD,CAzCM"},"metadata":{},"sourceType":"module"}