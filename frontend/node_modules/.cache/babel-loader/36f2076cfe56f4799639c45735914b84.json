{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  classes: []\n};\nconst ClassesSlice = createSlice({\n  name: 'classes',\n  initialState,\n  reducers: {\n    replaceClasses(state, action) {\n      state.classes = action.payload;\n    },\n\n    addClass(state, action) {\n      if (!state.classes.find(clas => clas.id === action.payload.id)) {\n        const newClass = {\n          id: action.payload.id,\n          name: action.payload.name,\n          description: action.payload.description,\n          startDate: action.payload.startDate,\n          endDate: action.payload.endDate,\n          students: action.payload.students\n        };\n        state.classes.push(newClass);\n        state.classes = state.classes.sort();\n      }\n    },\n\n    removeClass(state, action) {\n      state.classes = state.classes.filter(clas => clas.id !== action.payload);\n    }\n\n  }\n});\nexport const classesActions = ClassesSlice.actions;\nexport default ClassesSlice;","map":{"version":3,"names":["createSlice","initialState","classes","ClassesSlice","name","reducers","replaceClasses","state","action","payload","addClass","find","clas","id","newClass","description","startDate","endDate","students","push","sort","removeClass","filter","classesActions","actions"],"sources":["C:/Users/Utilizador/OneDrive/Ambiente de Trabalho/SchoolApplication/frontend/src/store/classes-slice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IClass } from '../interfaces/IClass';\n\nconst initialState: ClassesState = {\n  classes: [],\n};\n\nconst ClassesSlice = createSlice({\n  name: 'classes',\n  initialState,\n  reducers: {\n    replaceClasses(state, action: PayloadAction<IClass[]>) {\n      state.classes = action.payload;\n    },\n    addClass(state, action: PayloadAction<IClass>) {\n      if (\n        !state.classes.find((clas: IClass) => clas.id === action.payload.id)\n      ) {\n        const newClass = {\n          id: action.payload.id,\n          name: action.payload.name,\n          description: action.payload.description,\n          startDate: action.payload.startDate,\n          endDate: action.payload.endDate,\n          students: action.payload.students,\n        };\n        state.classes.push(newClass);\n        state.classes = state.classes.sort();\n      }\n    },\n    removeClass(state, action: PayloadAction<string>) {\n      state.classes = state.classes.filter(\n        (clas: IClass) => clas.id !== action.payload,\n      );\n    },\n  },\n});\n\nexport const classesActions = ClassesSlice.actions;\nexport default ClassesSlice;\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,MAAMC,YAA0B,GAAG;EACjCC,OAAO,EAAE;AADwB,CAAnC;AAIA,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SADyB;EAE/BH,YAF+B;EAG/BI,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAyC;MACrDD,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACC,OAAvB;IACD,CAHO;;IAIRC,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAuC;MAC7C,IACE,CAACD,KAAK,CAACL,OAAN,CAAcS,IAAd,CAAoBC,IAAD,IAAkBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACC,OAAP,CAAeI,EAAhE,CADH,EAEE;QACA,MAAMC,QAAQ,GAAG;UACfD,EAAE,EAAEL,MAAM,CAACC,OAAP,CAAeI,EADJ;UAEfT,IAAI,EAAEI,MAAM,CAACC,OAAP,CAAeL,IAFN;UAGfW,WAAW,EAAEP,MAAM,CAACC,OAAP,CAAeM,WAHb;UAIfC,SAAS,EAAER,MAAM,CAACC,OAAP,CAAeO,SAJX;UAKfC,OAAO,EAAET,MAAM,CAACC,OAAP,CAAeQ,OALT;UAMfC,QAAQ,EAAEV,MAAM,CAACC,OAAP,CAAeS;QANV,CAAjB;QAQAX,KAAK,CAACL,OAAN,CAAciB,IAAd,CAAmBL,QAAnB;QACAP,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,CAAckB,IAAd,EAAhB;MACD;IACF,CAnBO;;IAoBRC,WAAW,CAACd,KAAD,EAAQC,MAAR,EAAuC;MAChDD,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,CAAcoB,MAAd,CACbV,IAAD,IAAkBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACC,OADvB,CAAhB;IAGD;;EAxBO;AAHqB,CAAD,CAAhC;AA+BA,OAAO,MAAMc,cAAc,GAAGpB,YAAY,CAACqB,OAApC;AACP,eAAerB,YAAf"},"metadata":{},"sourceType":"module"}