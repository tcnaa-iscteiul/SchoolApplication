{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getCookie } from 'typescript-cookie';\nimport { AxiosError } from 'axios';\nimport { Service } from '../services/Service';\nimport { authActions } from '../store/auth-slice';\nexport const useSignUp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [users, setUsers] = useState();\n  const signUp = useCallback(async user => {\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const {\n        status\n      } = await Service.signUp(user);\n\n      if (status !== 201) {\n        setError('Something went wrong!');\n        throw new Error();\n      }\n    } catch (err) {\n      if (err instanceof AxiosError) {\n        var _err$response;\n\n        if ((_err$response = err.response) !== null && _err$response !== void 0 && _err$response.data) {\n          setError(err.response.data.message);\n        } else if (err.message) {\n          setError(err.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n  const createClass = useCallback(async clas => {\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const {\n        status\n      } = await Service.createClass(clas);\n\n      if (status !== 201) {\n        throw new Error();\n      }\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response;\n\n        if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n          setError(error.response.data.message);\n        } else if (error.message) {\n          setError(error.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n  const updateStudent = useCallback(async clas => {\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const {\n        status\n      } = await Service.updateUser(clas);\n\n      if (status !== 200) {\n        throw new Error();\n      }\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response2;\n\n        if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && _error$response2.data) {\n          setError(error.response.data.message);\n        } else if (error.message) {\n          setError(error.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n  const deleteStudent = useCallback(async user => {\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const {\n        status\n      } = await Service.deleteUser(user);\n\n      if (status !== 200) {\n        throw new Error();\n      }\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response3;\n\n        if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && _error$response3.data) {\n          setError(error.response.data.message);\n        } else if (error.message) {\n          setError(error.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n  const getAllUsers = useCallback(async () => {\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const {\n        data,\n        status\n      } = await Service.getAllUsers();\n      const users = [];\n      data.map(item => users.push(item));\n      setUsers(users);\n\n      if (status !== 201) {\n        throw new Error();\n      }\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response4;\n\n        if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && _error$response4.data) {\n          setError(error.response.data.message);\n        } else if (error.message) {\n          setError(error.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, []);\n  /*\r\n  const calculateRemainingTime = (expirationTime: string) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n      const remainingTime = adjExpirationTime - currentTime;\r\n      return remainingTime;\r\n  };*/\n\n  const logout = useCallback(async () => {\n    setIsLoading(true);\n    setError('');\n\n    try {\n      const token = getCookie('token');\n\n      if (!token) {\n        navigate('/');\n        dispatch(authActions.logout());\n        return;\n      }\n\n      const {\n        status\n      } = await Service.deleteToken(token);\n      navigate('/');\n      dispatch(authActions.logout());\n\n      if (status !== 201) {\n        throw new Error();\n      }\n    } catch (error) {\n      if (error instanceof AxiosError) {\n        var _error$response5;\n\n        if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && _error$response5.data) {\n          setError(error.response.data.message);\n        } else if (error.message) {\n          setError(error.message);\n        }\n      } else {\n        setError('Something went wrong!');\n      }\n    }\n\n    setIsLoading(false);\n  }, [dispatch, navigate]);\n  /*\r\n    const signIn = useCallback(async (user: IUser) => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            const { data, status } = await Service.signIn(user);\r\n            console.log(data);\r\n            navigate('/' + data.role);\r\n            if (status !== 201) {\r\n                throw new Error();\r\n            }\r\n            dispatch(authActions.login({ token: data.accessToken,\r\n              role: data.role, status: data.status }));\r\n            const remainingTime = calculateRemainingTime(data);\r\n           // setTimeout(logout, 216000000);\r\n        }\r\n        catch (err: any) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }, [dispatch, navigate, logout]);\r\n    */\n\n  return {\n    isLoading,\n    error,\n    signUp,\n    getAllUsers,\n    users,\n    deleteStudent,\n    createClass,\n    updateStudent,\n    // signIn,\n    logout\n  };\n};\n\n_s(useSignUp, \"mXxkiyipB2zh2LfeSd03hjppf5Y=\", false, function () {\n  return [useDispatch, useNavigate];\n});","map":{"version":3,"names":["useCallback","useState","useDispatch","useNavigate","getCookie","AxiosError","Service","authActions","useSignUp","dispatch","navigate","isLoading","setIsLoading","error","setError","users","setUsers","signUp","user","undefined","status","Error","err","response","data","message","createClass","clas","updateStudent","updateUser","deleteStudent","deleteUser","getAllUsers","map","item","push","logout","token","deleteToken"],"sources":["C:/Users/Utilizador/OneDrive/Ambiente de Trabalho/SchoolApplication/frontend/src/hooks/useSignUp.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getCookie } from 'typescript-cookie';\r\nimport { AxiosError } from 'axios';\r\nimport { IUser } from '../interfaces/IUser';\r\nimport * as IClass from '../interfaces/IClass';\r\nimport { Service } from '../services/Service';\r\nimport { authActions } from '../store/auth-slice';\r\n\r\nexport const useSignUp = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string>();\r\n  const [users, setUsers] = useState<IUser[]>();\r\n\r\n  const signUp = useCallback(async (user: IUser) => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    try {\r\n      const { status } = await Service.signUp(user);\r\n      if (status !== 201) {\r\n        setError('Something went wrong!');\r\n        throw new Error();\r\n      }\r\n    } catch (err: unknown) {\r\n      if (err instanceof AxiosError<Error, Response>) {\r\n        if (err.response?.data) {\r\n          setError(err.response.data.message);\r\n        } else if (err.message) {\r\n          setError(err.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const createClass = useCallback(async (clas: IClass.IClass) => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    try {\r\n      const { status } = await Service.createClass(clas);\r\n\r\n      if (status !== 201) {\r\n        throw new Error();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.data) {\r\n          setError(error.response.data.message);\r\n        } else if (error.message) {\r\n          setError(error.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const updateStudent = useCallback(async (clas: IUser) => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    try {\r\n      const { status } = await Service.updateUser(clas);\r\n      if (status !== 200) {\r\n        throw new Error();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.data) {\r\n          setError(error.response.data.message);\r\n        } else if (error.message) {\r\n          setError(error.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const deleteStudent = useCallback(async (user: IUser) => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    try {\r\n      const { status } = await Service.deleteUser(user);\r\n      if (status !== 200) {\r\n        throw new Error();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.data) {\r\n          setError(error.response.data.message);\r\n        } else if (error.message) {\r\n          setError(error.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const getAllUsers = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(undefined);\r\n    try {\r\n      const { data, status } = await Service.getAllUsers();\r\n      const users: IUser[] = [];\r\n      data.map((item: IUser) => users.push(item));\r\n      setUsers(users);\r\n      if (status !== 201) {\r\n        throw new Error();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.data) {\r\n          setError(error.response.data.message);\r\n        } else if (error.message) {\r\n          setError(error.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n  /*\r\n  const calculateRemainingTime = (expirationTime: string) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingTime = adjExpirationTime - currentTime;\r\n\r\n    return remainingTime;\r\n  };*/\r\n\r\n  const logout = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError('');\r\n    try {\r\n      const token = getCookie('token');\r\n      if (!token) {\r\n        navigate('/');\r\n        dispatch(authActions.logout());\r\n        return;\r\n      }\r\n      const { status } = await Service.deleteToken(token);\r\n      navigate('/');\r\n      dispatch(authActions.logout());\r\n      if (status !== 201) {\r\n        throw new Error();\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof AxiosError) {\r\n        if (error.response?.data) {\r\n          setError(error.response.data.message);\r\n        } else if (error.message) {\r\n          setError(error.message);\r\n        }\r\n      } else {\r\n        setError('Something went wrong!');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, [dispatch, navigate]);\r\n  /*\r\n    const signIn = useCallback(async (user: IUser) => {\r\n        setIsLoading(true);\r\n        setError('');\r\n        try {\r\n            const { data, status } = await Service.signIn(user);\r\n            console.log(data);\r\n            navigate('/' + data.role);\r\n            if (status !== 201) {\r\n                throw new Error();\r\n            }\r\n            dispatch(authActions.login({ token: data.accessToken,\r\n              role: data.role, status: data.status }));\r\n            const remainingTime = calculateRemainingTime(data);\r\n           // setTimeout(logout, 216000000);\r\n        }\r\n        catch (err: any) {\r\n            setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n    }, [dispatch, navigate, logout]);\r\n    */\r\n  return {\r\n    isLoading,\r\n    error,\r\n    signUp,\r\n    getAllUsers,\r\n    users,\r\n    deleteStudent,\r\n    createClass,\r\n    updateStudent,\r\n    // signIn,\r\n    logout,\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}